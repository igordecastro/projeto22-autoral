generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model public_session {
  id        Int      @id @default(autoincrement())
  userId    Int
  User      public_patients     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model public_appointments {
  id                   Int                  @id(map: "appointments_pk") @default(autoincrement())
  patient_id           Int
  professional_id      Int
  date                 DateTime             @db.Date
  public_patients      public_patients      @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "appointments_fk0")
  public_professionals public_professionals @relation(fields: [professional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "appointments_fk1")

  @@map("public.appointments")
}

model public_patients {
  id                  Int                   @id(map: "patients_pk") @default(autoincrement())
  phone_number        Int?
  name                String?                @db.VarChar
  email               String                @unique @db.VarChar
  password            String                @db.VarChar
  address             String?                @db.VarChar
  health_ensurance    String?               @db.VarChar
  cpf                 Int?                   @unique
  birth_day           DateTime?              @db.Date
  public_appointments public_appointments[]
  public_session      public_session[]
  
  @@map("public.patients")
}

model public_professionals {
  id                  Int                   @id(map: "professionals_pk") @default(autoincrement())
  name                String                @db.VarChar
  phone_number        Int
  specialty           String                @db.VarChar
  public_appointments public_appointments[]

  @@map("public.professionals")
}
